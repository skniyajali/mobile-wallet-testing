name: 'KMP Build Android App'
description: 'Build the Android application using Gradle'
author: 'Mifos Initiative'
branding:
  icon: 'play'
  color: 'orange'

inputs:
  android_package_name:
    description: 'Name of the Android project module'
    required: true
  build_type:
    description: 'Type of build to perform'
    required: true
    default: 'Debug'
  key_store:
    description: 'Base64 encoded keystore file'
    required: false
  google_services:
    description: 'Base64 encoded google-services.json file'
    required: false
  key_store_password:
    description: 'Password for the keystore file'
    required: false
  key_store_alias:
    description: 'Alias for the keystore file'
    required: false
  key_store_alias_password:
    description: 'Password for the keystore alias'
    required: false

outputs:
  artifact-name:
    description: 'Name of the artifact'
    value: 'android-app'

runs:
  using: composite
  steps:
    # Setup Ruby for Fastlane automation
    - name: Configure Ruby
      uses: ruby/setup-ruby@a2bbe5b1b236842c1cb7dd11e8e3b51e0a616acc # v1.202.0
      with:
        bundler-cache: true

    # Install Fastlane and required plugins for deployment automation
    - name: Install Fastlane
      shell: bash
      run: |
        gem install bundler:2.2.27
        bundle install --jobs 4 --retry 3
        bundle exec fastlane add_plugin firebase_app_distribution
        bundle exec fastlane add_plugin increment_build_number

    # Cache Gradle dependencies and build outputs to speed up future builds
    - name: Cache Gradle and build outputs
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          build
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Inflate Secrets
      if: ${{ inputs.build_type == 'Release' }}
      shell: bash
      env:
        KEYSTORE: ${{ inputs.key_store }}
        GOOGLE_SERVICES: ${{ inputs.google_services }}
      run: |        
        # Inflate keystore
        echo $KEYSTORE | base64 --decode > ${{ github.workspace }}/keystores/release_keystore.keystore

        # Inflate google-services.json
        echo $GOOGLE_SERVICES | base64 --decode > ${{ inputs.android_package_name }}/google-services.json


    - name: Build Debug Android App
      if: ${{ inputs.build_type == 'Debug' }}
      shell: bash
      run: bundle exec fastlane android assembleDebugApks

    - name: Build Release Android App
      if: ${{ inputs.build_type == 'Release' }}
      shell: bash
      env:
        KEYSTORE_PASSWORD: ${{ inputs.key_store_password }}
        KEYSTORE_ALIAS: ${{ inputs.key_store_alias }}
        KEYSTORE_ALIAS_PASSWORD: ${{ inputs.key_store_alias_password }}
      run: |
        bundle exec fastlane android assembleReleaseApks \
        storeFile: release_keystore.keystore \
        storePassword: ${{ env.KEYSTORE_PASSWORD }} \
        keyAlias: ${{ env.KEYSTORE_ALIAS }} \
        keyPassword: ${{ env.KEYSTORE_ALIAS_PASSWORD }}

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-app
        path: |
          **/build/outputs/apk/demo/**/*.apk
          **/build/outputs/apk/prod/**/*.apk